package home

import (
	h "mercado/app/helpers/home"
	expense "mercado/app/models/expense"
	stringsUtils "mercado/utils/strings"
	"strconv"
)

var showGroceryStoreSelectorHeader = false

templ ExpensesListItem(expense expense.Expense) {
	<script type="text/javascript">
        function formatCurrency(inputValue) {
            const numericValue = inputValue.replace(/\D/g, "");
            const decimalValue = Number(numericValue) / 100;
            return decimalValue.toFixed(2);
        }

        function handleEdit(e) {
            this.editing = true;

            const parentLi = e.target.closest("li");
            const input = parentLi.querySelector("input");

            setTimeout(() => {
                input.value = formatCurrency(input.value);
                input.focus();
                input.setSelectionRange(0, input.value.length);
            }, 0);
        }

        function handleDelete(e) {
            const parentLi = e.target.closest("li");
            const dialog = parentLi.querySelector("dialog");

            dialog.showModal();
        }

        function handleCancelDelete(e) {
            const parentLi = e.target.closest("li");
            const dialog = parentLi.querySelector("dialog");
            dialog.close();
        }
    </script>
	<li
		class="expense-list-item p-4 mb-4 rounded shadow-md"
		x-data="{ editing: false }"
	>
		<dialog class="rounded">
			<div class="p-8">
				<h3>Certzinha que quer deletar isso?</h3>
				<div class="flex items-center space-x-6 mt-3">
					<button @click="handleCancelDelete" class="text-blue-500 p-2">
						Melhor naÌƒo
					</button>
					<button
						class="text-red-500 p-2"
						hx-delete={ strconv.Itoa(expense.ID) }
						hx-target="closest .expense-list-item"
						hx-swap="outerHTML"
					>
						Sim, Deletar
					</button>
				</div>
			</div>
		</dialog>
		<div x-show="!editing" class="flex">
			<div class="flex-1">
				<div class="flex items-center space-x-2">
					<span class="text-lg font-semibold">{ stringsUtils.FormatCurrency(expense.Value) }</span>
					<div class="text-gray-600">{ expense.GroceryStore }</div>
				</div>
				<span class="text-xs">{ h.FormatDate(expense.Date) }</span>
			</div>
			<div class="flex space-x-4 items-center">
				<button @click="handleEdit" class="ml-auto text-blue-500">
					Editar
				</button>
				<button
					@click="handleDelete"
					class="text-red-500 flex items-center space-x-1"
				>
					<svg
						class="w-4 h-4"
						viewBox="0 0 24 24"
						width="auto"
						height="100%"
						xmlns="http://www.w3.org/2000/svg"
						fill-rule="evenodd"
						clip-rule="evenodd"
						fill="currentColor"
					>
						<path
							d="M19 24h-14c-1.104 0-2-.896-2-2v-17h-1v-2h6v-1.5c0-.827.673-1.5 1.5-1.5h5c.825 0 1.5.671 1.5 1.5v1.5h6v2h-1v17c0 1.104-.896 2-2 2zm0-19h-14v16.5c0 .276.224.5.5.5h13c.276 0 .5-.224.5-.5v-16.5zm-9 4c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm6 0c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm-2-7h-4v1h4v-1z"
						></path>
					</svg>
				</button>
			</div>
		</div>
		<div x-show="editing" class="mt-2">
			<form
				hx-post={ "/edit/" + strconv.Itoa(expense.ID) }
				hx-target="closest .expense-list-item"
				hx-swap="outerHTML"
			>
				<span>
					<label htmlFor="value" class="block text-sm font-medium mb-1">
						Valor
					</label>
					<div x-data={ `{expenseValue : "` + strconv.Itoa(expense.Value) + `" }` }>
						<input
							name="value"
							@input="handleInputChange"
							x-model="expenseValue"
							type="text"
							inputmode="decimal"
							class="w-full border border-gray-300 px-2 py-1 rounded"
						/>
						<div class="mt-2">
							@GroceryStoreSelector(expense.GroceryStore, showGroceryStoreSelectorHeader)
						</div>
					</div>
				</span>
				<button
					type="submit"
					class="w-full mt-2 px-4 py-2 bg-blue-500 text-white rounded"
				>
					Salvar
				</button>
			</form>
		</div>
	</li>
}
