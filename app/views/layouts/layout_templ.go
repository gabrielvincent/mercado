// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func deferLoader() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_deferLoader_265b`,
		Function: `function __templ_deferLoader_265b(){window.loadDeferredComponent = function loadDeferredComponent(id) {
        const deferredComponent = document.querySelector(` + "`" + `div[data-defer-id='${id}']` + "`" + `);
        const parentDeferredComponent = deferredComponent.parentElement;
        const loadedComponent = document.querySelector(` + "`" + `div[data-defer-id='${id}'][data-defer-completed='true']` + "`" + `);

        parentDeferredComponent.replaceChild(loadedComponent, deferredComponent);
    }
}`,
		Call:       templ.SafeScript(`__templ_deferLoader_265b`),
		CallInline: templ.SafeScriptInline(`__templ_deferLoader_265b`),
	}
}

func Layout() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"apple-mobile-web-app-capable\" content=\"yes\"><meta name=\"apple-mobile-web-app-title\" content=\"Mercado\"><link rel=\"apple-touch-icon\" href=\"public/images/icon.png\"><meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"><title>Mercado</title><link rel=\"stylesheet\" href=\"public/css/custom-fonts.css\"><link rel=\"stylesheet\" href=\"public/css/tailwind.css\"><script src=\"public/js/htmx.min.js\"></script><script src=\"public/js/alpinejs.min.js\"></script></head><body><main>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</main>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = deferLoader().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
